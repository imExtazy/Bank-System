# app/controllers/report_controller.py
from PySide6.QtWidgets import (QHBoxLayout, QPushButton, QMessageBox,
                               QFileDialog, QSpacerItem, QSizePolicy, QWidget)
from app.views.table_view import TableView
import pandas as pd


class ReportController:
    def __init__(self, db):
        self.db = db
        self._setup_ui()
        self.load_data()

    def _setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ—Ç—á–µ—Ç–æ–≤"""
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å —É—á–µ—Ç–æ–º –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        current_user = self.db.connection.get_dsn_parameters().get('user')
        self.view = TableView(is_admin=current_user == 'nikolay')
        self.view.setWindowTitle("–û—Ç—á–µ—Ç –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º")

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ —á–µ—Ä–µ–∑ TableView
        self.view.table_name = "client_info_v"  # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ä–µ–∂–∏–º –æ—Ç—á–µ—Ç–∞

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        self.view.back_button.setText("–ó–∞–∫—Ä—ã—Ç—å")
        self.view.back_button.clicked.connect(self.view.close)

        # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –æ—Ç—á–µ—Ç–∞
        self._create_report_toolbar()

    def _create_report_toolbar(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤"""
        toolbar = QWidget()
        toolbar_layout = QHBoxLayout(toolbar)
        toolbar_layout.setContentsMargins(0, 0, 0, 0)

        # –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞
        self.export_btn = QPushButton("üìä –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel")
        self.export_btn.setStyleSheet("""
            QPushButton {
                padding: 5px;
                background-color: #4CAF50;
                color: white;
                border: none;
                border-radius: 4px;
            }
            QPushButton:hover {
                background-color: #45a049;
            }
        """)
        self.export_btn.clicked.connect(self.export_to_excel)
        toolbar_layout.addWidget(self.export_btn)

        # –ö–Ω–æ–ø–∫–∞ –ø–µ—á–∞—Ç–∏
        self.print_btn = QPushButton("üñ® –ü–µ—á–∞—Ç—å")
        self.print_btn.setStyleSheet("padding: 5px;")
        self.print_btn.clicked.connect(self._print_report)
        toolbar_layout.addWidget(self.print_btn)

        # –ì–∏–±–∫–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
        toolbar_layout.addSpacerItem(QSpacerItem(20, 20, QSizePolicy.Expanding, QSizePolicy.Minimum))

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        if hasattr(self.view, 'gridLayout'):
            self.view.gridLayout.addWidget(toolbar, 0, 0, 1, 2)
        else:
            self.view.horizontalLayout.insertWidget(0, toolbar)

    def load_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
        try:
            data = self.db.execute_query("""
                SELECT 
                    full_name as "–§–ò–û",
                    passport as "–ü–∞—Å–ø–æ—Ä—Ç", 
                    phone as "–¢–µ–ª–µ—Ñ–æ–Ω",
                    CASE WHEN sign THEN '–î–∞' ELSE '–ù–µ—Ç' END as "–ü–æ–¥–ø–∏—Å—å",
                    balance as "–ë–∞–ª–∞–Ω—Å",
                    CASE WHEN debt IS NOT NULL THEN '–ï—Å—Ç—å' ELSE '–ù–µ—Ç' END as "–î–æ–ª–≥"
                FROM client_info_v
            """)

            if data:
                self.view.setup_table(
                    self.view.main_table,
                    ["–§–ò–û", "–ü–∞—Å–ø–æ—Ä—Ç", "–¢–µ–ª–µ—Ñ–æ–Ω", "–ü–æ–¥–ø–∏—Å—å", "–ë–∞–ª–∞–Ω—Å", "–î–æ–ª–≥"],
                    data
                )
        except Exception as e:
            QMessageBox.critical(self.view, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: {str(e)}")

    def export_to_excel(self):
        """–£–ª—É—á—à–µ–Ω–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–∞–Ω–Ω—ã—Ö"""
        try:
            data = self.db.execute_query("SELECT * FROM client_info_v")
            if not data:
                raise ValueError("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞")

            df = pd.DataFrame(data, columns=[
                "–§–ò–û", "–ü–∞—Å–ø–æ—Ä—Ç", "–¢–µ–ª–µ—Ñ–æ–Ω",
                "–ù–∞–ª–∏—á–∏–µ –ø–æ–¥–ø–∏—Å–∏", "–ë–∞–ª–∞–Ω—Å", "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å"
            ])

            file_path = self._get_save_path()
            if file_path:
                df.to_excel(file_path, index=False, engine='openpyxl')
                self._show_success_message(file_path)

        except Exception as e:
            QMessageBox.critical(
                self.view,
                "–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n{str(e)}"
            )

    def _get_save_path(self):
        """–î–∏–∞–ª–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞"""
        return QFileDialog.getSaveFileName(
            self.view,
            "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á–µ—Ç",
            "–∫–ª–∏–µ–Ω—Ç—ã_–æ—Ç—á–µ—Ç.xlsx",
            "Excel Files (*.xlsx)"
        )[0]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—É—Ç—å

    def _show_success_message(self, path):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —ç–∫—Å–ø–æ—Ä—Ç–µ"""
        QMessageBox.information(
            self.view,
            "–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω",
            f"–û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω:\n{path}",
            QMessageBox.Ok
        )

    def _print_report(self):
        """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±—É–¥—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–µ—á–∞—Ç–∏"""
        QMessageBox.information(
            self.view,
            "–ü–µ—á–∞—Ç—å –æ—Ç—á–µ—Ç–∞",
            "–§—É–Ω–∫—Ü–∏—è –ø–µ—á–∞—Ç–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
            QMessageBox.Ok
        )